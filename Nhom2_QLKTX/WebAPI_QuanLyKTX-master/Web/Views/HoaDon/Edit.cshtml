@model Web.Models.HOADON
@using Web.Models
@{
    ViewBag.Title = "Sửa thông tin";
    Layout = "~/Views/Shared/MainLayout.cshtml";
    var db = new Context();
    var list_phong = db.PHONGs;
    var list_hd = db.PHIEU_DIENNUOC.ToList();

}

<h2 class="hi"><i class="fas fa-file-invoice"></i>Sửa Thông tin hóa đơn</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Hóa đơn</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ngaytao, "Ngày tạo phiếu", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ngaytao, new { htmlAttributes = new { @class = "form-control", Value = DateTime.Now, @Readonly = "true" } })
            @Html.ValidationMessageFor(model => model.ngaytao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <label class="control-label col-md-2" for="maphong">Phòng nhận hóa đơn</label>
            @if (list_phong != null && list_phong.ToList().Count > 0)
            {
                <select id="maphong" name="maphong" disabled>
                    @foreach (var i in list_phong.ToList())
                    {
                        <option value="@i.maphong" @(i.maphong == Model.maphong ? "selected" : "")>
                            @list_phong.FirstOrDefault(x => x.maphong == i.maphong).tenphong
                        </option>
                    }
                </select>
            }
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <label class="control-label col-md-2" for="maphieudiennuoc">Phiếu điện nước</label>
            @if (list_hd != null && list_hd.Count > 0)
            {
                <select id="maphieudiennuoc" name="maphieudiennuoc">
                    @foreach (var i in list_hd)
                    {
                        // Lọc các phiếu điện nước có tên phòng trùng với tên phòng trong mục phòng nhận hóa đơn
                        var tenPhongPhieu = i.PHONG.tenphong;
                        var tenPhongHoaDon = list_phong.FirstOrDefault(x => x.maphong == Model.maphong)?.tenphong;

                        // Chỉ hiển thị phiếu điện nước nếu tên phòng trùng với tên phòng nhận hóa đơn
                        if (tenPhongPhieu == tenPhongHoaDon)
                        {
                            var ma = i.maphieu + i.ngaytaophieu.Value.ToString("ddMyyyy");
                            <option value="@i.maphieu" data-tenphong="@i.PHONG.tenphong" e-value="@i.tongtien" @(i.maphieu == Model.maphieudiennuoc ? "selected" : "")>
                                Mã phiếu: @ma - @i.PHONG.tenphong - @i.ngaytaophieu.Value.ToString("HH") giờ @i.ngaytaophieu.Value.ToString("mm") phút ngày @i.ngaytaophieu.Value.ToString("dd") tháng @i.ngaytaophieu.Value.ToString("MM")
                            </option>
                        }
                    }
                </select>
            }
        </div>
    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.tiendiennuoc, "Tiền điện - nước", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tiendiennuoc, new { htmlAttributes = new { @class = "form-control", @Readonly = "true" } })
            @Html.ValidationMessageFor(model => model.tiendiennuoc, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.tienphong, "Tiền phòng", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tienphong, new { htmlAttributes = new { @class = "form-control", @Readonly = "true" } })
            @Html.ValidationMessageFor(model => model.tienphong, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.tongtien, "Tổng tiền", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tongtien, new { htmlAttributes = new { @class = "form-control", @Readonly = "true" } })
            @Html.ValidationMessageFor(model => model.tongtien, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label for="tinhtrang">Tình trạng</label>
        <select id="tinhtrang" name="tinhtrang" class="form-control">
            <option value="Chưa thanh toán" @(Model.tinhtrang == "Chưa thanh toán" ? "selected" : "")>Chưa thanh toán</option>
            <option value="Đã thanh toán" @(Model.tinhtrang == "Đã thanh toán" ? "selected" : "")>Đã thanh toán</option>
        </select>
    </div>






    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    <i class="fa-regular fa-square-caret-left"></i> @Html.ActionLink("Quay lại", "Index")
</div>

<script>
    $(document).ready(function () {
        // Function to calculate total amount
        var TinhTien = function () {
            var Tong = $("#tongtien");
            var d = Number($("#tiendiennuoc").val());
            var p = Number($("#tienphong").val());
            Tong.val(d + p);
        }

        // Update tiendiennuoc when selecting a new phiếu
        $("#maphieudiennuoc").change(function () {
            var _vl = $("#maphieudiennuoc option:selected").attr('e-value');
            $("#tiendiennuoc").val(_vl);
            TinhTien();
        });

        // Recalculate total when tienphong is changed
        $("#tienphong").change(function () {
            if ($(this).val() < 0 || isNaN($(this).val())) {
                alert("Giá trị không hợp lệ");
                $(this).val('0');
            }
            TinhTien();
        });
    });
</script>
